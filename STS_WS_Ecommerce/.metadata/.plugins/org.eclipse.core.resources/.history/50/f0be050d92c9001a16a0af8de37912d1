package com.example.demo;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;

public class javatest {

	public static void main(String[] args) {

		Runnable t;
		
		
		Formula f = (a) -> a*5;
		
		System.out.println(f.calculate(10));

		// creating sample Collection
		List<Integer> myList = new ArrayList<Integer>();
		for (int i = 0; i < 5; i++)
			myList.add(i);

		
		//Collections.sort(myList, (a, b) -> a.compareTo(b));

		
		Thread t2 = new Thread(() -> System.out.println("thread new"));

		t2.start();

		// traversing with Consumer interface implementation
		
		Consumer<Integer> mycons = (k) -> System.out.println("lambda impl Value::" + k);
		
		mycons.accept(112);
		
		//Consumer<Integer> myconsnew = System.out::println;
		//MyConsumer action = new MyConsumer();
		
		
		myList.parallelStream().forEach(System.out::println);
		
		myList.forEach(new MyConsumer());
		
		//System.out.println("results from consumer"+ action.test);
		
		
		
	}

}

// Consumer implementation that can be reused
class MyConsumer implements Consumer<Integer> {

	List test = new ArrayList<Integer>();
	public void accept(Integer t) {
		
		test.add(t);
		System.out.println("Consumer impl Value::" + t);
	}

}
